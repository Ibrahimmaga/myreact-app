name: CI
on:
  pull_request:
    branches: [develop, master]
  push:
    branches: [develop, master]
      
jobs:
  linux-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache node_modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{hashFiles('**/package-lock.json')}}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Use NodeJs
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - run: npm ci
      - run: npm run format:check
      - run: npm run format
      - run: npm test -- --coverage
        env: 
          CI: true
      - name: Upload Test --coverage
        uses: actions/upload-artifact@v1
        with:
          name: code-coverage
          path: coverage

      - name: Build Project
        if: github.event_name == 'push'
        run: npm run build
      - name: Upload build Folder
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v1
        with:
          name: build
          path: build
      
      - name: Create a Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - name: deploy to staging
        if: github.event_name == 'push'
        run: npx surge --project ./build --domain panoramic-bridge.surge.sh
        env:
          SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
          SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}


  window-build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache node_modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{hashFiles('**/package-lock.json')}}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Use NodeJs
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - run: npm ci
      - run: npm run format:check
      - run: npm run format

      - run: npm test -- --coverage
        env: 
          CI: true
      - name: Build Project
        if: github.event_name == 'push'
        run: npm run build
      - name: deploy to staging
        if: github.event_name == 'push'
        run: npx surge --project ./build --domain panoramic-bridge.surge.sh
        env:
          SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
          SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}

  macOS-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache node_modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{hashFiles('**/package-lock.json')}}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Use NodeJs
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - run: npm ci
      - run: npm run format:check
      - run: npm run format
      - run: npm test -- --coverage
        env: 
          CI: true
      - name: Build Project
        if: github.event_name == 'push'
        run: npm run build
      - name: deploy to staging
        if: github.event_name == 'push'
        run: npx surge --project ./build --domain panoramic-bridge.surge.sh
        env:
          SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
          SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}

    
    
      

